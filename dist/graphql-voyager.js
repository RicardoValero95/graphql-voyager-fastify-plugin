"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
function renderVoyagerPage(_a) {
    var endpointUrl = _a.endpointUrl, displayOptions = _a.displayOptions;
    var html = String.raw;
    return html(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui\"\n        />\n        <title>GraphQL Voyager</title>\n        <style>\n          body {\n            padding: 0;\n            margin: 0;\n            width: 100vw;\n            height: 100vh;\n            overflow: hidden;\n          }\n          #voyager {\n            height: 100vh;\n          }\n        </style>\n\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdn.jsdelivr.net/npm/graphql-voyager/dist/voyager.css\"\n        />\n      </head>\n      <body>\n        <main id=\"voyager\">\n          <h1>Loading...</h1>\n        </main>\n        <script>\n          window.addEventListener('load', function (event) {\n            function introspectionProvider(introspectionQuery) {\n              return fetch('", "', {\n                method: 'post',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ query: introspectionQuery }),\n                credentials: 'include',\n              })\n                .then(function (response) {\n                  return response.text()\n                })\n                .then(function (responseBody) {\n                  try {\n                    return JSON.parse(responseBody)\n                  } catch (error) {\n                    return responseBody\n                  }\n                })\n            }\n            GraphQLVoyager.init(document.getElementById('voyager'), {\n              introspection: introspectionProvider,\n              displayOptions: ", ",\n            })\n          })\n        </script>\n        <script src=\"https://cdn.jsdelivr.net/fetch/2.0.1/fetch.min.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/react@16/umd/react.production.min.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/react-dom@16/umd/react-dom.production.min.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/graphql-voyager/dist/voyager.min.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/graphql-voyager/dist/voyager.min.js\"></script>\n      </body>\n    </html>\n  "], ["\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, minimal-ui\"\n        />\n        <title>GraphQL Voyager</title>\n        <style>\n          body {\n            padding: 0;\n            margin: 0;\n            width: 100vw;\n            height: 100vh;\n            overflow: hidden;\n          }\n          #voyager {\n            height: 100vh;\n          }\n        </style>\n\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdn.jsdelivr.net/npm/graphql-voyager/dist/voyager.css\"\n        />\n      </head>\n      <body>\n        <main id=\"voyager\">\n          <h1>Loading...</h1>\n        </main>\n        <script>\n          window.addEventListener('load', function (event) {\n            function introspectionProvider(introspectionQuery) {\n              return fetch('", "', {\n                method: 'post',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ query: introspectionQuery }),\n                credentials: 'include',\n              })\n                .then(function (response) {\n                  return response.text()\n                })\n                .then(function (responseBody) {\n                  try {\n                    return JSON.parse(responseBody)\n                  } catch (error) {\n                    return responseBody\n                  }\n                })\n            }\n            GraphQLVoyager.init(document.getElementById('voyager'), {\n              introspection: introspectionProvider,\n              displayOptions: ", ",\n            })\n          })\n        </script>\n        <script src=\"https://cdn.jsdelivr.net/fetch/2.0.1/fetch.min.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/react@16/umd/react.production.min.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/react-dom@16/umd/react-dom.production.min.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/graphql-voyager/dist/voyager.min.js\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/graphql-voyager/dist/voyager.min.js\"></script>\n      </body>\n    </html>\n  "])), endpointUrl, JSON.stringify(displayOptions));
}
exports.default = renderVoyagerPage;
var templateObject_1;
